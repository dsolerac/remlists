
#*****************************************
#Should be overwritten by env parameter
#*****************************************

remlists.user.write.config.host.name= node1
remlists.user.write.config.datasource.driver-class-name=org.postgresql.Driver
remlists.user.write.config.spring.datasource.platform=POSTGRESQL
remlists.user.write.config.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
remlists.user.write.config.jpa.database=POSTGRESQL
remlists.user.write.config.jpa.generate-ddl=false
remlists.user.write.config.jpa.show-sql=true
remlists.user.write.config.jpa.hibernate.ddl-auto=none


#***************************************************************
#The following properties configuration must not be changed ever
#***************************************************************

spring.profiles.active=@spring.profiles.active@
spring.messages.basename=messages, ValidationMessages
spring.application.name=remlists-module-user-write


#spring.security.user.name=user
#spring.security.user.password=pass
#spring.security.user.roles= # Granted roles for the default user name.


spring.kafka.bootstrap-servers=${remlists.user.write.config.kafka.bootstrap-servers}
spring.kafka.consumer.group-id=${remlists.user.write.config.kafka.group-id}


#remlists.user.write.spring.kafka.bootstrap-servers=${remlists.user.write.config.kafka.bootstrap-servers}
#remlists.user.write.spring.kafka.consumer.group-id=${remlists.user.write.config.kafka.group-id}


remlists.user.write.spring.datasource.url=jdbc:postgresql://${remlists.user.write.config.jdbc.host}:${remlists.user.write.config.jdbc.port}/${remlists.user.write.config.jdbc.database}?reWriteBatchedInserts=true
remlists.user.write.spring.datasource.username=${remlists.user.write.config.jdbc.username}
remlists.user.write.spring.datasource.password=${remlists.user.write.config.jdbc.password}
remlists.user.write.spring.datasource.driver-class-name=${remlists.user.write.config.datasource.driver-class-name}
remlists.user.write.spring.datasource.platform=${remlists.user.write.config.spring.datasource.platform}

remlists.user.write.spring.datasource.hikari.connection-timeout=${remlists.user.write.config.jdbc.hikari.connectiontimeout}
remlists.user.write.spring.datasource.hikari.idle-timeout=${remlists.user.write.config.jdbc.hikari.idletimeout}
remlists.user.write.spring.datasource.hikari.max-lifetime=${remlists.user.write.config.jdbc.hikari.maxlifetime}
remlists.user.write.spring.datasource.hikari.maximum-pool-size=${remlists.user.write.config.jdbc.hikari.maximumpoolsize}
remlists.user.write.spring.datasource.hikari.minimum-idle=${remlists.user.write.config.jdbc.hikari.minimumidle}

remlists.user.write.spring.jpa.hibernate.ddl-auto=${remlists.user.write.config.jpa.hibernate.ddl-auto}

remlists.user.write.spring.jpa.show-sql=${remlists.user.write.config.jpa.show-sql}
remlists.user.write.spring.jpa.generate-ddl=${remlists.user.write.config.jpa.generate-ddl}
remlists.user.write.spring.jpa.database=${remlists.user.write.config.jpa.database}
remlists.user.write.spring.jpa.properties.hibernate.dialect=${remlists.user.write.config.jpa.properties.hibernate.dialect}
remlists.user.write.spring.jpa.properties.hibernate.format_sql=true
remlists.user.write.spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=false
remlists.user.write.spring.jpa.properties.hibernate.default_schema=write
remlists.user.write.spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

jasypt.encryptor.password=remlists
jasypt.encryptor.algorithm=PBEWithMD5AndDES


